{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","msg","App","setmode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edf3ba9a.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} ` }>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"#\">About</a>\n        </li>\n       \n        \n      </ul>\n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n      <div className={`form-check form-switch text-${props.mode=== 'light' ? 'dark': 'light'} ` }>\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable dark mode</label>\n    </div>\n    </div>\n  </div>\n</nav>\n        </div>\n    )\n}\n\nNavbar.propTypes ={\n        title:PropTypes.string.isRequired\n}","import React,{useState} from 'react'\n\n\nexport default function TextForm(props) {\n\n    const handleUpClick=()=>{\n        //console.log(\"clicked\"+text);\n        let newText=text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"converted to uppercase\",\"success\");\n    }\n\n    const handleLoClick=()=>{\n        //console.log(\"clicked\"+text);\n        let newText=text.toLowerCase();\n        setText(newText);\n    }\n\n    const handleOnChange=(event)=>{\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState(\"\");\n\n    return (\n        <>\n        <div className='container' style={{color:props.mode=== 'dark' ? 'white': 'black'}}>\n            <h1>{props.heading}</h1>\n<div className=\"mb-3\">\n  \n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode=== 'dark' ? 'light': 'light'}} id=\"myBox\" rows=\"8\"></textarea>\n</div>\n<button className=\"btn btn-primary mx-3 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n<button className=\"btn btn-primary mx-3 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\n\n\n        </div>\n        <div className=\"container my-4\" style={{color:props.mode=== 'dark' ? 'white': 'black'}}>\n            <h1>your text summary</h1>\n            <p> {text.split(\" \").length-1} words and {text.length} characters   </p>\n            <p>{0.08 * text.split(\" \").length} minutes read</p>\n            <h2>preview</h2>\n            <p>{text.length>0? text:\"Enter your text to preview\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n     \n                  props.alert &&     <div className={`alert alert-${props.alert.type} alert-dismissible fade show `} role=\"alert\">\n                            {props.alert.type} :   {props.alert.msg}\n              \n                </div>\n       \n    )\n}\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router,Routes,Route} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\nconst [alert, setAlert] = useState(null)\n\nconst showAlert=(message,type)=>{\nsetAlert({\n  msg:message,\n  type:type\n})\nsetTimeout(() => {\n  setAlert(null);\n}, 1500);\n}\n\n  const toggleMode= ()=>\n  {\n    if(mode=== 'light'){\n    setmode('dark');\n  document.body.style.backgroundColor='grey';\n  showAlert(\"Dark mode is enaled\",\"success\");\n    }\n    else{\n    setmode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"light mode is enaled\",\"success\");\n  }\n}\n  return (\n   <>\n   {/* <Router> */}\n<Navbar title=\"Text conversion\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className='container my-5' >\n{/* \n       <Routes>\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/\" element={ <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode}/>} />\n      </Routes> */}\n         <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode}/>\n        \n</div>\n{/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}